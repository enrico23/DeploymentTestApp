name: pull-request-changes

on: 
  pull_request:
    branches: [main]
env:
    ORGANIZATION: 'enrico23'
    REPOSITORY: 'DeploymentTestApp'
    MY_GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    DOTNET_VERSION: '6.0.x'
    BUILD_CONFIGURATION: 'Release'    # set this to the appropriate build configuration

jobs:
  get-pr-changes:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout files
      uses: Bhacaz/checkout-files@v2
      with:
         files: tools

    - name: Get PR changes
      id: GetPrChanges
      shell: pwsh
      run: |
        echo "Get Pull Request changes"
        $files= $(gh api repos/${{ env.ORGANIZATION }}/${{ env.REPOSITORY }}/pulls/${{ github.event.pull_request.number }}/files)
        $usersObject = ConvertFrom-Json â€“InputObject $files
        $changedFiles = $usersObject | select -ExpandProperty filename
        echo $changedFiles > pull-request-changes.txt
        echo "::set-output name=files::${changedFiles}"
        
    - name: Archive Pull Request Artifacts
      uses: actions/upload-artifact@v3
      with:
          name: pull-request-changes
          path: pull-request-changes.txt
          if-no-files-found: warn

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install dependencies
      run: dotnet restore
      working-directory: ./tools/ConsoleApp1
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: ./tools/ConsoleApp1
      
    - name: Run owneship TOOL
      id: CodeOwnersParser
      shell: pwsh
      run: |
        $files = "${{ steps.GetPrChanges.outputs.files }}"
        echo $files
        $output = $files | ${{ github.workspace }}/tools/ConsoleApp1/bin/Release/net6.0/ConsoleApp1 > codeowners-report.txt
        $reportData = (Get-Content ${{ github.workspace }}/codeowners-report.txt)
        echo "::set-output name=owners::'Notifying code owners: ${reportData}'"
      continue-on-error: false

    - name: Archive Codeowners Report Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: codeowners-report
        path: codeowners-report.txt
        if-no-files-found: warn

    - name: Check if already commented
      uses: peter-evans/find-comment@v1
      id: find-comment
      with:
        issue-number: ${{ github.event.number }}
        comment-author: 'github-actions[bot]'
        body-includes: 'Notifying code owners: '

    - name: LS
      run: echo ${{ steps.CodeOwnersParser.outputs.owners }}

    #If no existing comment exists create a new one if there were any owners found
    - name: Create new comment
      if: steps.find-comment.outputs.comment-id == '' && steps.CodeOwnersParser.outputs.owners != ''
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.number }}
        body: |
            ${{ steps.CodeOwnersParser.outputs.owners }}
      
    #If existing comment was found replace it
    - name: Update existing comment
      if: steps.find-comment.outputs.comment-id != '' && steps.CodeOwnersParser.outputs.owners != ''
      uses: peter-evans/create-or-update-comment@v1
      with:
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        edit-mode: replace
        body: |
          ${{ steps.CodeOwnersParser.outputs.owners }}